// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: proto_rosbag2.proto

#include "rosbag_converter/proto_rosbag2.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// This is a temporary google only hack
#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
#include "third_party/protobuf/version.h"
#endif
// @@protoc_insertion_point(includes)

namespace protobuf_proto_5frosbag2_2eproto {
extern PROTOBUF_INTERNAL_EXPORT_protobuf_proto_5frosbag2_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_ProtoRosBag2_ProtoRosBag2Message;
}  // namespace protobuf_proto_5frosbag2_2eproto
namespace rosbag_converter_proto {
class ProtoRosBag2_ProtoRosBag2MessageDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ProtoRosBag2_ProtoRosBag2Message>
      _instance;
} _ProtoRosBag2_ProtoRosBag2Message_default_instance_;
class ProtoRosBag2DefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ProtoRosBag2>
      _instance;
} _ProtoRosBag2_default_instance_;
}  // namespace rosbag_converter_proto
namespace protobuf_proto_5frosbag2_2eproto {
static void InitDefaultsProtoRosBag2_ProtoRosBag2Message() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::rosbag_converter_proto::_ProtoRosBag2_ProtoRosBag2Message_default_instance_;
    new (ptr) ::rosbag_converter_proto::ProtoRosBag2_ProtoRosBag2Message();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::rosbag_converter_proto::ProtoRosBag2_ProtoRosBag2Message::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_ProtoRosBag2_ProtoRosBag2Message =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsProtoRosBag2_ProtoRosBag2Message}, {}};

static void InitDefaultsProtoRosBag2() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::rosbag_converter_proto::_ProtoRosBag2_default_instance_;
    new (ptr) ::rosbag_converter_proto::ProtoRosBag2();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::rosbag_converter_proto::ProtoRosBag2::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_ProtoRosBag2 =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsProtoRosBag2}, {
      &protobuf_proto_5frosbag2_2eproto::scc_info_ProtoRosBag2_ProtoRosBag2Message.base,}};

void InitDefaults() {
  ::google::protobuf::internal::InitSCC(&scc_info_ProtoRosBag2_ProtoRosBag2Message.base);
  ::google::protobuf::internal::InitSCC(&scc_info_ProtoRosBag2.base);
}

::google::protobuf::Metadata file_level_metadata[2];

const ::google::protobuf::uint32 TableStruct::offsets[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::rosbag_converter_proto::ProtoRosBag2_ProtoRosBag2Message, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::rosbag_converter_proto::ProtoRosBag2_ProtoRosBag2Message, topic_name_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::rosbag_converter_proto::ProtoRosBag2_ProtoRosBag2Message, topic_type_name_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::rosbag_converter_proto::ProtoRosBag2_ProtoRosBag2Message, time_stamp_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::rosbag_converter_proto::ProtoRosBag2_ProtoRosBag2Message, serialized_data_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::rosbag_converter_proto::ProtoRosBag2, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::rosbag_converter_proto::ProtoRosBag2, messages_),
};
static const ::google::protobuf::internal::MigrationSchema schemas[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  { 0, -1, sizeof(::rosbag_converter_proto::ProtoRosBag2_ProtoRosBag2Message)},
  { 9, -1, sizeof(::rosbag_converter_proto::ProtoRosBag2)},
};

static ::google::protobuf::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::google::protobuf::Message*>(&::rosbag_converter_proto::_ProtoRosBag2_ProtoRosBag2Message_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::rosbag_converter_proto::_ProtoRosBag2_default_instance_),
};

void protobuf_AssignDescriptors() {
  AddDescriptors();
  AssignDescriptors(
      "proto_rosbag2.proto", schemas, file_default_instances, TableStruct::offsets,
      file_level_metadata, NULL, NULL);
}

void protobuf_AssignDescriptorsOnce() {
  static ::google::protobuf::internal::once_flag once;
  ::google::protobuf::internal::call_once(once, protobuf_AssignDescriptors);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_PROTOBUF_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::internal::RegisterAllTypes(file_level_metadata, 2);
}

void AddDescriptorsImpl() {
  InitDefaults();
  static const char descriptor[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
      "\n\023proto_rosbag2.proto\022\026rosbag_converter_"
      "proto\"\313\001\n\014ProtoRosBag2\022J\n\010messages\030\001 \003(\013"
      "28.rosbag_converter_proto.ProtoRosBag2.P"
      "rotoRosBag2Message\032o\n\023ProtoRosBag2Messag"
      "e\022\022\n\ntopic_name\030\001 \001(\t\022\027\n\017topic_type_name"
      "\030\002 \001(\t\022\022\n\ntime_stamp\030\003 \001(\004\022\027\n\017serialized"
      "_data\030\004 \001(\014b\006proto3"
  };
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
      descriptor, 259);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "proto_rosbag2.proto", &protobuf_RegisterTypes);
}

void AddDescriptors() {
  static ::google::protobuf::internal::once_flag once;
  ::google::protobuf::internal::call_once(once, AddDescriptorsImpl);
}
// Force AddDescriptors() to be called at dynamic initialization time.
struct StaticDescriptorInitializer {
  StaticDescriptorInitializer() {
    AddDescriptors();
  }
} static_descriptor_initializer;
}  // namespace protobuf_proto_5frosbag2_2eproto
namespace rosbag_converter_proto {

// ===================================================================

void ProtoRosBag2_ProtoRosBag2Message::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ProtoRosBag2_ProtoRosBag2Message::kTopicNameFieldNumber;
const int ProtoRosBag2_ProtoRosBag2Message::kTopicTypeNameFieldNumber;
const int ProtoRosBag2_ProtoRosBag2Message::kTimeStampFieldNumber;
const int ProtoRosBag2_ProtoRosBag2Message::kSerializedDataFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ProtoRosBag2_ProtoRosBag2Message::ProtoRosBag2_ProtoRosBag2Message()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_proto_5frosbag2_2eproto::scc_info_ProtoRosBag2_ProtoRosBag2Message.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:rosbag_converter_proto.ProtoRosBag2.ProtoRosBag2Message)
}
ProtoRosBag2_ProtoRosBag2Message::ProtoRosBag2_ProtoRosBag2Message(const ProtoRosBag2_ProtoRosBag2Message& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  topic_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.topic_name().size() > 0) {
    topic_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.topic_name_);
  }
  topic_type_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.topic_type_name().size() > 0) {
    topic_type_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.topic_type_name_);
  }
  serialized_data_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.serialized_data().size() > 0) {
    serialized_data_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.serialized_data_);
  }
  time_stamp_ = from.time_stamp_;
  // @@protoc_insertion_point(copy_constructor:rosbag_converter_proto.ProtoRosBag2.ProtoRosBag2Message)
}

void ProtoRosBag2_ProtoRosBag2Message::SharedCtor() {
  topic_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  topic_type_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  serialized_data_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  time_stamp_ = GOOGLE_ULONGLONG(0);
}

ProtoRosBag2_ProtoRosBag2Message::~ProtoRosBag2_ProtoRosBag2Message() {
  // @@protoc_insertion_point(destructor:rosbag_converter_proto.ProtoRosBag2.ProtoRosBag2Message)
  SharedDtor();
}

void ProtoRosBag2_ProtoRosBag2Message::SharedDtor() {
  topic_name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  topic_type_name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  serialized_data_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void ProtoRosBag2_ProtoRosBag2Message::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* ProtoRosBag2_ProtoRosBag2Message::descriptor() {
  ::protobuf_proto_5frosbag2_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_proto_5frosbag2_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ProtoRosBag2_ProtoRosBag2Message& ProtoRosBag2_ProtoRosBag2Message::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_proto_5frosbag2_2eproto::scc_info_ProtoRosBag2_ProtoRosBag2Message.base);
  return *internal_default_instance();
}


void ProtoRosBag2_ProtoRosBag2Message::Clear() {
// @@protoc_insertion_point(message_clear_start:rosbag_converter_proto.ProtoRosBag2.ProtoRosBag2Message)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  topic_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  topic_type_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  serialized_data_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  time_stamp_ = GOOGLE_ULONGLONG(0);
  _internal_metadata_.Clear();
}

bool ProtoRosBag2_ProtoRosBag2Message::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:rosbag_converter_proto.ProtoRosBag2.ProtoRosBag2Message)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string topic_name = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_topic_name()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->topic_name().data(), static_cast<int>(this->topic_name().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "rosbag_converter_proto.ProtoRosBag2.ProtoRosBag2Message.topic_name"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string topic_type_name = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_topic_type_name()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->topic_type_name().data(), static_cast<int>(this->topic_type_name().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "rosbag_converter_proto.ProtoRosBag2.ProtoRosBag2Message.topic_type_name"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint64 time_stamp = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &time_stamp_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bytes serialized_data = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_serialized_data()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:rosbag_converter_proto.ProtoRosBag2.ProtoRosBag2Message)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:rosbag_converter_proto.ProtoRosBag2.ProtoRosBag2Message)
  return false;
#undef DO_
}

void ProtoRosBag2_ProtoRosBag2Message::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:rosbag_converter_proto.ProtoRosBag2.ProtoRosBag2Message)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string topic_name = 1;
  if (this->topic_name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->topic_name().data(), static_cast<int>(this->topic_name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "rosbag_converter_proto.ProtoRosBag2.ProtoRosBag2Message.topic_name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->topic_name(), output);
  }

  // string topic_type_name = 2;
  if (this->topic_type_name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->topic_type_name().data(), static_cast<int>(this->topic_type_name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "rosbag_converter_proto.ProtoRosBag2.ProtoRosBag2Message.topic_type_name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->topic_type_name(), output);
  }

  // uint64 time_stamp = 3;
  if (this->time_stamp() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(3, this->time_stamp(), output);
  }

  // bytes serialized_data = 4;
  if (this->serialized_data().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      4, this->serialized_data(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:rosbag_converter_proto.ProtoRosBag2.ProtoRosBag2Message)
}

::google::protobuf::uint8* ProtoRosBag2_ProtoRosBag2Message::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:rosbag_converter_proto.ProtoRosBag2.ProtoRosBag2Message)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string topic_name = 1;
  if (this->topic_name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->topic_name().data(), static_cast<int>(this->topic_name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "rosbag_converter_proto.ProtoRosBag2.ProtoRosBag2Message.topic_name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->topic_name(), target);
  }

  // string topic_type_name = 2;
  if (this->topic_type_name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->topic_type_name().data(), static_cast<int>(this->topic_type_name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "rosbag_converter_proto.ProtoRosBag2.ProtoRosBag2Message.topic_type_name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->topic_type_name(), target);
  }

  // uint64 time_stamp = 3;
  if (this->time_stamp() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(3, this->time_stamp(), target);
  }

  // bytes serialized_data = 4;
  if (this->serialized_data().size() > 0) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        4, this->serialized_data(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:rosbag_converter_proto.ProtoRosBag2.ProtoRosBag2Message)
  return target;
}

size_t ProtoRosBag2_ProtoRosBag2Message::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:rosbag_converter_proto.ProtoRosBag2.ProtoRosBag2Message)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string topic_name = 1;
  if (this->topic_name().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->topic_name());
  }

  // string topic_type_name = 2;
  if (this->topic_type_name().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->topic_type_name());
  }

  // bytes serialized_data = 4;
  if (this->serialized_data().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->serialized_data());
  }

  // uint64 time_stamp = 3;
  if (this->time_stamp() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->time_stamp());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ProtoRosBag2_ProtoRosBag2Message::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:rosbag_converter_proto.ProtoRosBag2.ProtoRosBag2Message)
  GOOGLE_DCHECK_NE(&from, this);
  const ProtoRosBag2_ProtoRosBag2Message* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ProtoRosBag2_ProtoRosBag2Message>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:rosbag_converter_proto.ProtoRosBag2.ProtoRosBag2Message)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:rosbag_converter_proto.ProtoRosBag2.ProtoRosBag2Message)
    MergeFrom(*source);
  }
}

void ProtoRosBag2_ProtoRosBag2Message::MergeFrom(const ProtoRosBag2_ProtoRosBag2Message& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:rosbag_converter_proto.ProtoRosBag2.ProtoRosBag2Message)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.topic_name().size() > 0) {

    topic_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.topic_name_);
  }
  if (from.topic_type_name().size() > 0) {

    topic_type_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.topic_type_name_);
  }
  if (from.serialized_data().size() > 0) {

    serialized_data_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.serialized_data_);
  }
  if (from.time_stamp() != 0) {
    set_time_stamp(from.time_stamp());
  }
}

void ProtoRosBag2_ProtoRosBag2Message::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:rosbag_converter_proto.ProtoRosBag2.ProtoRosBag2Message)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ProtoRosBag2_ProtoRosBag2Message::CopyFrom(const ProtoRosBag2_ProtoRosBag2Message& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:rosbag_converter_proto.ProtoRosBag2.ProtoRosBag2Message)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ProtoRosBag2_ProtoRosBag2Message::IsInitialized() const {
  return true;
}

void ProtoRosBag2_ProtoRosBag2Message::Swap(ProtoRosBag2_ProtoRosBag2Message* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ProtoRosBag2_ProtoRosBag2Message::InternalSwap(ProtoRosBag2_ProtoRosBag2Message* other) {
  using std::swap;
  topic_name_.Swap(&other->topic_name_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  topic_type_name_.Swap(&other->topic_type_name_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  serialized_data_.Swap(&other->serialized_data_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(time_stamp_, other->time_stamp_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata ProtoRosBag2_ProtoRosBag2Message::GetMetadata() const {
  protobuf_proto_5frosbag2_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_proto_5frosbag2_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void ProtoRosBag2::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ProtoRosBag2::kMessagesFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ProtoRosBag2::ProtoRosBag2()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_proto_5frosbag2_2eproto::scc_info_ProtoRosBag2.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:rosbag_converter_proto.ProtoRosBag2)
}
ProtoRosBag2::ProtoRosBag2(const ProtoRosBag2& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      messages_(from.messages_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:rosbag_converter_proto.ProtoRosBag2)
}

void ProtoRosBag2::SharedCtor() {
}

ProtoRosBag2::~ProtoRosBag2() {
  // @@protoc_insertion_point(destructor:rosbag_converter_proto.ProtoRosBag2)
  SharedDtor();
}

void ProtoRosBag2::SharedDtor() {
}

void ProtoRosBag2::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* ProtoRosBag2::descriptor() {
  ::protobuf_proto_5frosbag2_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_proto_5frosbag2_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ProtoRosBag2& ProtoRosBag2::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_proto_5frosbag2_2eproto::scc_info_ProtoRosBag2.base);
  return *internal_default_instance();
}


void ProtoRosBag2::Clear() {
// @@protoc_insertion_point(message_clear_start:rosbag_converter_proto.ProtoRosBag2)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  messages_.Clear();
  _internal_metadata_.Clear();
}

bool ProtoRosBag2::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:rosbag_converter_proto.ProtoRosBag2)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .rosbag_converter_proto.ProtoRosBag2.ProtoRosBag2Message messages = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_messages()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:rosbag_converter_proto.ProtoRosBag2)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:rosbag_converter_proto.ProtoRosBag2)
  return false;
#undef DO_
}

void ProtoRosBag2::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:rosbag_converter_proto.ProtoRosBag2)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .rosbag_converter_proto.ProtoRosBag2.ProtoRosBag2Message messages = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->messages_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1,
      this->messages(static_cast<int>(i)),
      output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:rosbag_converter_proto.ProtoRosBag2)
}

::google::protobuf::uint8* ProtoRosBag2::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:rosbag_converter_proto.ProtoRosBag2)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .rosbag_converter_proto.ProtoRosBag2.ProtoRosBag2Message messages = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->messages_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->messages(static_cast<int>(i)), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:rosbag_converter_proto.ProtoRosBag2)
  return target;
}

size_t ProtoRosBag2::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:rosbag_converter_proto.ProtoRosBag2)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated .rosbag_converter_proto.ProtoRosBag2.ProtoRosBag2Message messages = 1;
  {
    unsigned int count = static_cast<unsigned int>(this->messages_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->messages(static_cast<int>(i)));
    }
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ProtoRosBag2::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:rosbag_converter_proto.ProtoRosBag2)
  GOOGLE_DCHECK_NE(&from, this);
  const ProtoRosBag2* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ProtoRosBag2>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:rosbag_converter_proto.ProtoRosBag2)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:rosbag_converter_proto.ProtoRosBag2)
    MergeFrom(*source);
  }
}

void ProtoRosBag2::MergeFrom(const ProtoRosBag2& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:rosbag_converter_proto.ProtoRosBag2)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  messages_.MergeFrom(from.messages_);
}

void ProtoRosBag2::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:rosbag_converter_proto.ProtoRosBag2)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ProtoRosBag2::CopyFrom(const ProtoRosBag2& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:rosbag_converter_proto.ProtoRosBag2)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ProtoRosBag2::IsInitialized() const {
  return true;
}

void ProtoRosBag2::Swap(ProtoRosBag2* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ProtoRosBag2::InternalSwap(ProtoRosBag2* other) {
  using std::swap;
  CastToBase(&messages_)->InternalSwap(CastToBase(&other->messages_));
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata ProtoRosBag2::GetMetadata() const {
  protobuf_proto_5frosbag2_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_proto_5frosbag2_2eproto::file_level_metadata[kIndexInFileMessages];
}


// @@protoc_insertion_point(namespace_scope)
}  // namespace rosbag_converter_proto
namespace google {
namespace protobuf {
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::rosbag_converter_proto::ProtoRosBag2_ProtoRosBag2Message* Arena::CreateMaybeMessage< ::rosbag_converter_proto::ProtoRosBag2_ProtoRosBag2Message >(Arena* arena) {
  return Arena::CreateInternal< ::rosbag_converter_proto::ProtoRosBag2_ProtoRosBag2Message >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::rosbag_converter_proto::ProtoRosBag2* Arena::CreateMaybeMessage< ::rosbag_converter_proto::ProtoRosBag2 >(Arena* arena) {
  return Arena::CreateInternal< ::rosbag_converter_proto::ProtoRosBag2 >(arena);
}
}  // namespace protobuf
}  // namespace google

// @@protoc_insertion_point(global_scope)
